<?xml version="1.0" encoding="UTF-8"?>
<description:Group xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:description="http://www.eclipse.org/sirius/description/1.1.0" xmlns:description_1="http://www.eclipse.org/sirius/diagram/description/1.1.0" xmlns:description_2="http://www.eclipse.org/sirius/table/description/1.1.0" xmlns:style="http://www.eclipse.org/sirius/diagram/description/style/1.1.0" xmlns:tool="http://www.eclipse.org/sirius/diagram/description/tool/1.1.0" xmlns:tool_1="http://www.eclipse.org/sirius/description/tool/1.1.0" name="gsn" version="12.0.0.2017041100">
  <ownedViewpoints name="GSNViewpoint" modelFileExtension="gsn">
    <ownedRepresentations xsi:type="description_1:DiagramDescription" name="GSNRepresentation" domainClass="gsn.SafetyCase">
      <metamodel href="../../edu.toronto.cs.se.modelepedia.gsn/model/gsn.ecore#/"/>
      <layout xsi:type="description_1:CompositeLayout"/>
      <defaultLayer name="Default">
        <nodeMappings name="GoalNode" semanticCandidatesExpression="feature:goals" domainClass="gsn.Goal">
          <borderedNodeMappings name="AsilNode" semanticCandidatesExpression="feature:asil" domainClass="gsn.ASIL">
            <borderedNodeMappings name="AsilImpactNode" semanticCandidatesExpression="feature:status" domainClass="gsn.ImpactAnnotation">
              <style xsi:type="style:SquareDescription" showIcon="false" labelExpression="" labelAlignment="LEFT" labelPosition="node" resizeKind="NSEW">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <forbiddenSides>WEST</forbiddenSides>
                <forbiddenSides>SOUTH</forbiddenSides>
                <forbiddenSides>NORTH</forbiddenSides>
                <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
              </style>
              <conditionnalStyles predicateExpression="aql:self.type = gsn::ImpactType::Revise">
                <style xsi:type="style:WorkspaceImageDescription" showIcon="false" labelExpression="" sizeComputationExpression="-1" labelPosition="node" resizeKind="NSEW" workspacePath="/edu.toronto.cs.se.modelepedia.gsn.design/icons/Revise.png">
                  <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                </style>
              </conditionnalStyles>
              <conditionnalStyles predicateExpression="aql:self.type = gsn::ImpactType::RecheckContent or self.type = gsn::ImpactType::RecheckState">
                <style xsi:type="style:WorkspaceImageDescription" showIcon="false" labelExpression="" sizeComputationExpression="-1" labelPosition="node" resizeKind="NSEW" workspacePath="/edu.toronto.cs.se.modelepedia.gsn.design/icons/Recheck.png">
                  <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                </style>
              </conditionnalStyles>
              <conditionnalStyles predicateExpression="aql:self.type = gsn::ImpactType::Reuse">
                <style xsi:type="style:WorkspaceImageDescription" showIcon="false" labelExpression="" sizeComputationExpression="-1" labelPosition="node" resizeKind="NSEW" workspacePath="/edu.toronto.cs.se.modelepedia.gsn.design/icons/Reuse.png">
                  <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                </style>
              </conditionnalStyles>
            </borderedNodeMappings>
            <style xsi:type="style:SquareDescription" borderSizeComputationExpression="1" showIcon="false" labelExpression="aql:self.value" labelPosition="node" resizeKind="NSEW">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <forbiddenSides>WEST</forbiddenSides>
              <forbiddenSides>EAST</forbiddenSides>
              <forbiddenSides>NORTH</forbiddenSides>
              <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
            </style>
          </borderedNodeMappings>
          <borderedNodeMappings name="ElementImpactNode" semanticCandidatesExpression="feature:status" domainClass="gsn.ImpactAnnotation">
            <style xsi:type="style:SquareDescription" showIcon="false" labelExpression="" labelPosition="node" resizeKind="NSEW">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            </style>
            <conditionnalStyles predicateExpression="aql:self.type = gsn::ImpactType::Revise">
              <style xsi:type="style:WorkspaceImageDescription" showIcon="false" labelExpression="" sizeComputationExpression="-1" labelPosition="node" resizeKind="NSEW" workspacePath="/edu.toronto.cs.se.modelepedia.gsn.design/icons/Revise.png">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              </style>
            </conditionnalStyles>
            <conditionnalStyles predicateExpression="aql:self.type = gsn::ImpactType::RecheckContent">
              <style xsi:type="style:WorkspaceImageDescription" showIcon="false" labelExpression="" sizeComputationExpression="-1" labelPosition="node" resizeKind="NSEW" workspacePath="/edu.toronto.cs.se.modelepedia.gsn.design/icons/RecheckContent.png">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              </style>
            </conditionnalStyles>
            <conditionnalStyles predicateExpression="aql:self.type = gsn::ImpactType::RecheckState">
              <style xsi:type="style:WorkspaceImageDescription" showIcon="false" labelExpression="" sizeComputationExpression="-1" labelPosition="node" resizeKind="NSEW" workspacePath="/edu.toronto.cs.se.modelepedia.gsn.design/icons/RecheckState.png">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              </style>
            </conditionnalStyles>
            <conditionnalStyles predicateExpression="aql:self.type = gsn::ImpactType::Reuse">
              <style xsi:type="style:WorkspaceImageDescription" showIcon="false" labelExpression="" sizeComputationExpression="-1" labelPosition="node" resizeKind="NSEW" workspacePath="/edu.toronto.cs.se.modelepedia.gsn.design/icons/Reuse.png">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              </style>
            </conditionnalStyles>
          </borderedNodeMappings>
          <borderedNodeMappings name="UndevelopedNode" semanticCandidatesExpression="feature:undeveloped" domainClass="gsn.Undeveloped">
            <style xsi:type="style:LozengeNodeDescription" borderSizeComputationExpression="1" labelSize="12" showIcon="false" labelExpression="" labelPosition="node" resizeKind="NSEW">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <forbiddenSides>WEST</forbiddenSides>
              <forbiddenSides>EAST</forbiddenSides>
              <forbiddenSides>NORTH</forbiddenSides>
              <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
            </style>
          </borderedNodeMappings>
          <borderedNodeMappings name="RelationshipDecoratorNode" semanticCandidatesExpression="feature:decorators" domainClass="gsn.RelationshipDecorator">
            <conditionnalStyles predicateExpression="aql:self.type = gsn::DecoratorType::MULTIPLE">
              <style xsi:type="style:DotDescription" borderSizeComputationExpression="1" labelSize="10" showIcon="false" labelExpression="aql: if self.cardinality = -1 then '' else self.cardinality endif" resizeKind="NSEW">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <forbiddenSides>NORTH</forbiddenSides>
                <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              </style>
            </conditionnalStyles>
            <conditionnalStyles predicateExpression="aql:self.type = gsn::DecoratorType::OPTIONAL">
              <style xsi:type="style:DotDescription" borderSizeComputationExpression="1" labelSize="10" showIcon="false" labelExpression="" resizeKind="NSEW">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <forbiddenSides>NORTH</forbiddenSides>
                <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
              </style>
            </conditionnalStyles>
            <conditionnalStyles predicateExpression="aql:self.type = gsn::DecoratorType::CHOICE">
              <style xsi:type="style:LozengeNodeDescription" borderSizeComputationExpression="1" labelSize="10" showIcon="false" labelExpression="aql: if self.cardinality = -1 then '' else self.cardinality + ' of ' + (self.supportedBy->size()+self.inContextOf->size()) endif" resizeKind="NSEW">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <forbiddenSides>NORTH</forbiddenSides>
                <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              </style>
            </conditionnalStyles>
          </borderedNodeMappings>
          <style xsi:type="style:SquareDescription" borderSizeComputationExpression="1" labelSize="10" showIcon="false" labelExpression="aql:self.id + '\n' + self.description" sizeComputationExpression="-1" labelPosition="node" resizeKind="NSEW" width="20" height="10">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
          </style>
        </nodeMappings>
        <nodeMappings name="StrategyNode" semanticCandidatesExpression="feature:strategies" domainClass="gsn.Strategy" reusedBorderedNodeMappings="//@ownedViewpoints[name='GSNViewpoint']/@ownedRepresentations[name='GSNRepresentation']/@defaultLayer/@nodeMappings[name='GoalNode']/@borderedNodeMappings[name='ElementImpactNode'] //@ownedViewpoints[name='GSNViewpoint']/@ownedRepresentations[name='GSNRepresentation']/@defaultLayer/@nodeMappings[name='GoalNode']/@borderedNodeMappings[name='UndevelopedNode'] //@ownedViewpoints[name='GSNViewpoint']/@ownedRepresentations[name='GSNRepresentation']/@defaultLayer/@nodeMappings[name='GoalNode']/@borderedNodeMappings[name='RelationshipDecoratorNode']">
          <style xsi:type="style:WorkspaceImageDescription" labelSize="10" showIcon="false" labelExpression="aql:self.id + '\n' + self.description" sizeComputationExpression="20" labelPosition="node" resizeKind="NSEW" arcWidth="15" arcHeight="15" workspacePath="/edu.toronto.cs.se.modelepedia.gsn.design/icons/Strategy.svg">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
          </style>
        </nodeMappings>
        <nodeMappings name="SolutionNode" semanticCandidatesExpression="feature:solutions" domainClass="gsn.Solution" reusedBorderedNodeMappings="//@ownedViewpoints[name='GSNViewpoint']/@ownedRepresentations[name='GSNRepresentation']/@defaultLayer/@nodeMappings[name='GoalNode']/@borderedNodeMappings[name='ElementImpactNode']">
          <style xsi:type="style:DotDescription" borderSizeComputationExpression="1" labelSize="10" showIcon="false" labelExpression="aql:self.id + '\n' + self.description" sizeComputationExpression="15" labelPosition="node" resizeKind="NSEW">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
          </style>
        </nodeMappings>
        <nodeMappings name="ContextNode" semanticCandidatesExpression="feature:contexts" domainClass="gsn.Context" reusedBorderedNodeMappings="//@ownedViewpoints[name='GSNViewpoint']/@ownedRepresentations[name='GSNRepresentation']/@defaultLayer/@nodeMappings[name='GoalNode']/@borderedNodeMappings[name='ElementImpactNode']">
          <style xsi:type="style:WorkspaceImageDescription" labelSize="10" showIcon="false" labelExpression="aql:self.id + '\n' + self.description" sizeComputationExpression="20" labelPosition="node" resizeKind="NSEW" arcWidth="15" arcHeight="15" workspacePath="/edu.toronto.cs.se.modelepedia.gsn.design/icons/Context.svg">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
          </style>
        </nodeMappings>
        <nodeMappings name="JustificationNode" semanticCandidatesExpression="feature:justifications" domainClass="gsn.Justification" reusedBorderedNodeMappings="//@ownedViewpoints[name='GSNViewpoint']/@ownedRepresentations[name='GSNRepresentation']/@defaultLayer/@nodeMappings[name='GoalNode']/@borderedNodeMappings[name='ElementImpactNode']">
          <style xsi:type="style:EllipseNodeDescription" borderSizeComputationExpression="1" labelSize="10" showIcon="false" labelExpression="aql:self.id + '\n' + self.description" labelPosition="node" resizeKind="NSEW" horizontalDiameterComputationExpression="20" verticalDiameterComputationExpression="10">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
          </style>
        </nodeMappings>
        <nodeMappings name="AssumptionNode" semanticCandidatesExpression="feature:assumptions" domainClass="gsn.Assumption" reusedBorderedNodeMappings="//@ownedViewpoints[name='GSNViewpoint']/@ownedRepresentations[name='GSNRepresentation']/@defaultLayer/@nodeMappings[name='GoalNode']/@borderedNodeMappings[name='ElementImpactNode']">
          <style xsi:type="style:EllipseNodeDescription" borderSizeComputationExpression="1" labelSize="10" showIcon="false" labelExpression="aql:self.id + '\n' + self.description" labelPosition="node" resizeKind="NSEW" horizontalDiameterComputationExpression="20" verticalDiameterComputationExpression="10">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
          </style>
        </nodeMappings>
        <edgeMappings name="SupportedByEdge" sourceMapping="//@ownedViewpoints[name='GSNViewpoint']/@ownedRepresentations[name='GSNRepresentation']/@defaultLayer/@nodeMappings[name='GoalNode'] //@ownedViewpoints[name='GSNViewpoint']/@ownedRepresentations[name='GSNRepresentation']/@defaultLayer/@nodeMappings[name='StrategyNode'] //@ownedViewpoints[name='GSNViewpoint']/@ownedRepresentations[name='GSNRepresentation']/@defaultLayer/@nodeMappings[name='GoalNode']/@borderedNodeMappings[name='RelationshipDecoratorNode']" targetMapping="//@ownedViewpoints[name='GSNViewpoint']/@ownedRepresentations[name='GSNRepresentation']/@defaultLayer/@nodeMappings[name='SolutionNode'] //@ownedViewpoints[name='GSNViewpoint']/@ownedRepresentations[name='GSNRepresentation']/@defaultLayer/@nodeMappings[name='GoalNode'] //@ownedViewpoints[name='GSNViewpoint']/@ownedRepresentations[name='GSNRepresentation']/@defaultLayer/@nodeMappings[name='StrategyNode']" targetFinderExpression="feature:target" sourceFinderExpression="feature:eContainer" domainClass="gsn.SupportedBy" useDomainElement="true">
          <style targetArrow="InputFillClosedArrow">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <centerLabelStyleDescription>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <edgeMappings name="InContextOfEdge" sourceMapping="//@ownedViewpoints[name='GSNViewpoint']/@ownedRepresentations[name='GSNRepresentation']/@defaultLayer/@nodeMappings[name='GoalNode'] //@ownedViewpoints[name='GSNViewpoint']/@ownedRepresentations[name='GSNRepresentation']/@defaultLayer/@nodeMappings[name='StrategyNode'] //@ownedViewpoints[name='GSNViewpoint']/@ownedRepresentations[name='GSNRepresentation']/@defaultLayer/@nodeMappings[name='GoalNode']/@borderedNodeMappings[name='RelationshipDecoratorNode']" targetMapping="//@ownedViewpoints[name='GSNViewpoint']/@ownedRepresentations[name='GSNRepresentation']/@defaultLayer/@nodeMappings[name='ContextNode'] //@ownedViewpoints[name='GSNViewpoint']/@ownedRepresentations[name='GSNRepresentation']/@defaultLayer/@nodeMappings[name='JustificationNode'] //@ownedViewpoints[name='GSNViewpoint']/@ownedRepresentations[name='GSNRepresentation']/@defaultLayer/@nodeMappings[name='AssumptionNode']" targetFinderExpression="feature:context" sourceFinderExpression="feature:eContainer" domainClass="gsn.InContextOf" useDomainElement="true">
          <style targetArrow="InputClosedArrow">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <centerLabelStyleDescription>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <toolSections name="Create">
          <ownedTools xsi:type="tool:NodeCreationDescription" name="CreateGoal" label="Goal" nodeMappings="//@ownedViewpoints[name='GSNViewpoint']/@ownedRepresentations[name='GSNRepresentation']/@defaultLayer/@nodeMappings[name='GoalNode']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="gsn.Goal" referenceName="goals"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:NodeCreationDescription" name="CreateStrategy" label="Strategy" nodeMappings="//@ownedViewpoints[name='GSNViewpoint']/@ownedRepresentations[name='GSNRepresentation']/@defaultLayer/@nodeMappings[name='StrategyNode']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="gsn.Strategy" referenceName="strategies"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:NodeCreationDescription" name="CreateSolution" label="Solution" nodeMappings="//@ownedViewpoints[name='GSNViewpoint']/@ownedRepresentations[name='GSNRepresentation']/@defaultLayer/@nodeMappings[name='SolutionNode']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="gsn.Solution" referenceName="solutions"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:NodeCreationDescription" name="CreateContext" label="Context" nodeMappings="//@ownedViewpoints[name='GSNViewpoint']/@ownedRepresentations[name='GSNRepresentation']/@defaultLayer/@nodeMappings[name='ContextNode']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="gsn.Context" referenceName="contexts"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:NodeCreationDescription" name="CreateJustification" label="Justification" nodeMappings="//@ownedViewpoints[name='GSNViewpoint']/@ownedRepresentations[name='GSNRepresentation']/@defaultLayer/@nodeMappings[name='JustificationNode']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="gsn.Justification" referenceName="justifications"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:NodeCreationDescription" name="CreateAssumption" label="Assumption" nodeMappings="//@ownedViewpoints[name='GSNViewpoint']/@ownedRepresentations[name='GSNRepresentation']/@defaultLayer/@nodeMappings[name='AssumptionNode']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="gsn.Assumption" referenceName="assumptions"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:NodeCreationDescription" name="CreateASIL" label="ASIL" nodeMappings="//@ownedViewpoints[name='GSNViewpoint']/@ownedRepresentations[name='GSNRepresentation']/@defaultLayer/@nodeMappings[name='GoalNode']/@borderedNodeMappings[name='AsilNode']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="gsn.ASIL" referenceName="asil"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:EdgeCreationDescription" name="CreateSupportedBy" label="Supported-by Link" edgeMappings="//@ownedViewpoints[name='GSNViewpoint']/@ownedRepresentations[name='GSNRepresentation']/@defaultLayer/@edgeMappings[name='SupportedByEdge']">
            <sourceVariable name="source"/>
            <targetVariable name="target"/>
            <sourceViewVariable name="sourceView"/>
            <targetViewVariable name="targetView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:source">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="gsn.SupportedBy" referenceName="supportedBy">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="source" valueExpression="var:source"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="target" valueExpression="var:target"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:EdgeCreationDescription" name="CreateInContextOf" label="In-context-of Link" edgeMappings="//@ownedViewpoints[name='GSNViewpoint']/@ownedRepresentations[name='GSNRepresentation']/@defaultLayer/@edgeMappings[name='InContextOfEdge']">
            <sourceVariable name="source"/>
            <targetVariable name="target"/>
            <sourceViewVariable name="sourceView"/>
            <targetViewVariable name="targetView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:source">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="gsn.InContextOf" referenceName="inContextOf">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="contextOf" valueExpression="var:source"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="context" valueExpression="var:target"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:NodeCreationDescription" name="CreateRelationshipDecorator" label="Relationship Decorator" nodeMappings="//@ownedViewpoints[name='GSNViewpoint']/@ownedRepresentations[name='GSNRepresentation']/@defaultLayer/@nodeMappings[name='GoalNode']/@borderedNodeMappings[name='RelationshipDecoratorNode']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="gsn.RelationshipDecorator" referenceName="decorators"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:NodeCreationDescription" name="CreateContentImpact" label="Annotate Element" nodeMappings="//@ownedViewpoints[name='GSNViewpoint']/@ownedRepresentations[name='GSNRepresentation']/@defaultLayer/@nodeMappings[name='GoalNode']/@borderedNodeMappings[name='ElementImpactNode']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="gsn.ImpactAnnotation" referenceName="status"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:NodeCreationDescription" name="CreateASILImpact" label="Annotate ASIL" nodeMappings="//@ownedViewpoints[name='GSNViewpoint']/@ownedRepresentations[name='GSNRepresentation']/@defaultLayer/@nodeMappings[name='GoalNode']/@borderedNodeMappings[name='AsilNode']/@borderedNodeMappings[name='AsilImpactNode']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="gsn.ImpactAnnotation" referenceName="status"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
        </toolSections>
        <toolSections name="Menus">
          <ownedTools xsi:type="tool_1:PopupMenu" name="MMINT">
            <menuItemDescription xsi:type="tool_1:ExternalJavaAction" name="EvaluateQuery" label="Evaluate Query" id="edu.toronto.cs.se.mmint.mid.diagram.context.SiriusEvaluateQuery"/>
            <menuItemDescription xsi:type="tool_1:ExternalJavaAction" name="CreateTemplate" label="Group as Template" id="edu.toronto.cs.se.modelepedia.gsn.design.context.CreateTemplate"/>
            <menuItemDescription xsi:type="tool_1:ExternalJavaAction" name="ImportTemplate" label="Import Template" id="edu.toronto.cs.se.modelepedia.gsn.design.context.ImportTemplate"/>
            <menuItemDescription xsi:type="tool_1:ExternalJavaAction" name="InstantiateTemplate" label="Instantiate Template" id="edu.toronto.cs.se.modelepedia.gsn.design.context.InstantiateTemplate"/>
            <menuItemDescription xsi:type="tool_1:ExternalJavaAction" name="ValidateTemplate" label="Validate Template" id="edu.toronto.cs.se.modelepedia.gsn.design.context.ValidateTemplate"/>
            <menuItemDescription xsi:type="tool_1:ExternalJavaAction" name="InstantiateTemplateElement" label="Instantiate Template Element" id="edu.toronto.cs.se.modelepedia.gsn.design.context.InstantiateTemplateElement"/>
            <menuItemDescription xsi:type="tool_1:ExternalJavaAction" name="ValidateTemplateElement" label="Validate Template Element" id="edu.toronto.cs.se.modelepedia.gsn.design.context.ValidateTemplateElement"/>
          </ownedTools>
        </toolSections>
        <decorationDescriptionsSet>
          <decorationDescriptions xsi:type="description:SemanticBasedDecoration" name="TemplateDecoration" position="NORTH_WEST" distributionDirection="HORIZONTAL" preconditionExpression="aql: self.templates->size() > 0 and self.templates->first().oclIsTypeOf(gsn::Template)" imageExpression="/edu.toronto.cs.se.modelepedia.gsn.edit/icons/full/obj16/Template.png" tooltipExpression="Template element" domainClass="gsn.ArgumentElement"/>
        </decorationDescriptionsSet>
        <customization>
          <vsmElementCustomizations xsi:type="description:VSMElementCustomization" predicateExpression="aql: self.oclIsKindOf(gsn::ArgumentElement) and not self.oclAsType(gsn::ArgumentElement).valid">
            <featureCustomizations xsi:type="description:EReferenceCustomization" appliedOn="//@ownedViewpoints[name='GSNViewpoint']/@ownedRepresentations[name='GSNRepresentation']/@defaultLayer/@nodeMappings[name='GoalNode']/@style //@ownedViewpoints[name='GSNViewpoint']/@ownedRepresentations[name='GSNRepresentation']/@defaultLayer/@nodeMappings[name='ContextNode']/@style //@ownedViewpoints[name='GSNViewpoint']/@ownedRepresentations[name='GSNRepresentation']/@defaultLayer/@nodeMappings[name='StrategyNode']/@style //@ownedViewpoints[name='GSNViewpoint']/@ownedRepresentations[name='GSNRepresentation']/@defaultLayer/@nodeMappings[name='AssumptionNode']/@style //@ownedViewpoints[name='GSNViewpoint']/@ownedRepresentations[name='GSNRepresentation']/@defaultLayer/@nodeMappings[name='JustificationNode']/@style //@ownedViewpoints[name='GSNViewpoint']/@ownedRepresentations[name='GSNRepresentation']/@defaultLayer/@nodeMappings[name='SolutionNode']/@style" referenceName="labelColor">
              <value href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
            </featureCustomizations>
          </vsmElementCustomizations>
        </customization>
      </defaultLayer>
    </ownedRepresentations>
    <ownedRepresentations xsi:type="description_2:EditionTableDescription" name="GSNStatistics" domainClass="gsn.SafetyCase">
      <metamodel href="../../edu.toronto.cs.se.modelepedia.gsn/model/gsn.ecore#/"/>
      <ownedLineMappings name="ReviseLine" domainClass="gsn.SafetyCase" semanticCandidatesExpression="aql:root" headerLabelExpression="Revise"/>
      <ownedLineMappings name="RecheckContentLine" domainClass="gsn.SafetyCase" semanticCandidatesExpression="aql:root" headerLabelExpression="Recheck Content"/>
      <ownedLineMappings name="RecheckStateLine" domainClass="gsn.SafetyCase" semanticCandidatesExpression="aql:root" headerLabelExpression="Recheck State"/>
      <ownedLineMappings name="ReuseLine" domainClass="gsn.SafetyCase" semanticCandidatesExpression="aql:root" headerLabelExpression="Reuse"/>
      <ownedLineMappings name="TotalLine" domainClass="gsn.SafetyCase" semanticCandidatesExpression="aql:root" headerLabelExpression="Total"/>
      <ownedColumnMappings name="GoalColumn" headerLabelExpression="Goals" featureName="goals" labelExpression="aql:let s = self.goals in let total = s -> size(), revise = s -> select(x | x.status.type = gsn::ImpactType::Revise) -> size(), recheckContent = s -> select(x | x.status.type = gsn::ImpactType::RecheckContent) -> size(), recheckState = s -> select(x | x.status.type = gsn::ImpactType::RecheckState) -> size(), reuse = s -> select(x | x.status.type = gsn::ImpactType::Reuse) -> size() in let undet = total - revise - recheckContent - recheckState - reuse in if line.label = 'Revise' then revise + ' (' + revise*100/total + '%)' else if line.label = 'Recheck Content' then recheckContent + ' (' + recheckContent*100/total + '%)' else if line.label = 'Recheck State' then recheckState + ' (' + recheckState*100/total + '%)' else if line.label = 'Reuse' then reuse + ' (' + reuse*100/total + '%)' else if line.label = 'Blank' then undet + ' (' + undet*100/total + '%)' else if line.label = 'Total' then total else 'Error' endif endif endif endif endif endif"/>
      <ownedColumnMappings name="StrategyColumn" headerLabelExpression="Strategies" featureName="strategies" labelExpression="aql:let s = self.strategies in let total = s -> size(), revise = s -> select(x | x.status.type = gsn::ImpactType::Revise) -> size(), recheckContent = s -> select(x | x.status.type = gsn::ImpactType::RecheckContent) -> size(), recheckState = s -> select(x | x.status.type = gsn::ImpactType::RecheckState) -> size(), reuse = s -> select(x | x.status.type = gsn::ImpactType::Reuse) -> size() in let undet = total - revise - recheckContent - recheckState - reuse in if line.label = 'Revise' then revise + ' (' + revise*100/total + '%)' else if line.label = 'Recheck Content' then recheckContent + ' (' + recheckContent*100/total + '%)' else if line.label = 'Recheck State' then recheckState + ' (' + recheckState*100/total + '%)' else if line.label = 'Reuse' then reuse + ' (' + reuse*100/total + '%)' else if line.label = 'Blank' then undet + ' (' + undet*100/total + '%)' else if line.label = 'Total' then total else 'Error' endif endif endif endif endif endif"/>
      <ownedColumnMappings name="SolutionContentColumn" headerLabelExpression="Solutions" featureName="solutions" labelExpression="aql:let s = self.solutions in let total = s -> size(), revise = s -> select(x | x.status.type = gsn::ImpactType::Revise) -> size(), recheckContent = s -> select(x | x.status.type = gsn::ImpactType::RecheckContent) -> size(), recheckState = s -> select(x | x.status.type = gsn::ImpactType::RecheckState) -> size(), reuse = s -> select(x | x.status.type = gsn::ImpactType::Reuse) -> size() in let undet = total - revise - recheckContent - recheckState - reuse in if line.label = 'Revise' then revise + ' (' + revise*100/total + '%)' else if line.label = 'Recheck Content' then recheckContent + ' (' + recheckContent*100/total + '%)' else if line.label = 'Recheck State' then recheckState + ' (' + recheckState*100/total + '%)' else if line.label = 'Reuse' then reuse + ' (' + reuse*100/total + '%)' else if line.label = 'Blank' then undet + ' (' + undet*100/total + '%)' else if line.label = 'Total' then total else 'Error' endif endif endif endif endif endif"/>
      <ownedColumnMappings name="ContextColumn" headerLabelExpression="Context" featureName="contexts" labelExpression="aql:let s = self.contexts in let total = s -> size(), revise = s -> select(x | x.status.type = gsn::ImpactType::Revise) -> size(), recheckContent = s -> select(x | x.status.type = gsn::ImpactType::RecheckContent) -> size(), recheckState = s -> select(x | x.status.type = gsn::ImpactType::RecheckState) -> size(), reuse = s -> select(x | x.status.type = gsn::ImpactType::Reuse) -> size() in let undet = total - revise - recheckContent - recheckState - reuse in if line.label = 'Revise' then revise + ' (' + revise*100/total + '%)' else if line.label = 'Recheck Content' then recheckContent + ' (' + recheckContent*100/total + '%)' else if line.label = 'Recheck State' then recheckState + ' (' + recheckState*100/total + '%)' else if line.label = 'Reuse' then reuse + ' (' + reuse*100/total + '%)' else if line.label = 'Blank' then undet + ' (' + undet*100/total + '%)' else if line.label = 'Total' then total else 'Error' endif endif endif endif endif endif"/>
      <ownedColumnMappings name="JustificationColumn" headerLabelExpression="Justifications" featureName="justifications" labelExpression="aql:let s = self.justifications in let total = s -> size(), revise = s -> select(x | x.status.type = gsn::ImpactType::Revise) -> size(), recheckContent = s -> select(x | x.status.type = gsn::ImpactType::RecheckContent) -> size(), recheckState = s -> select(x | x.status.type = gsn::ImpactType::RecheckState) -> size(), reuse = s -> select(x | x.status.type = gsn::ImpactType::Reuse) -> size() in let undet = total - revise - recheckContent - recheckState - reuse in if line.label = 'Revise' then revise + ' (' + revise*100/total + '%)' else if line.label = 'Recheck Content' then recheckContent + ' (' + recheckContent*100/total + '%)' else if line.label = 'Recheck State' then recheckState + ' (' + recheckState*100/total + '%)' else if line.label = 'Reuse' then reuse + ' (' + reuse*100/total + '%)' else if line.label = 'Blank' then undet + ' (' + undet*100/total + '%)' else if line.label = 'Total' then total else 'Error' endif endif endif endif endif endif"/>
      <ownedColumnMappings name="AssumptionColumn" headerLabelExpression="Assumptions" featureName="assumptions" labelExpression="aql:let s = self.assumptions in let total = s -> size(), revise = s -> select(x | x.status.type = gsn::ImpactType::Revise) -> size(), recheckContent = s -> select(x | x.status.type = gsn::ImpactType::RecheckContent) -> size(), recheckState = s -> select(x | x.status.type = gsn::ImpactType::RecheckState) -> size(), reuse = s -> select(x | x.status.type = gsn::ImpactType::Reuse) -> size() in let undet = total - revise - recheckContent - recheckState - reuse in if line.label = 'Revise' then revise + ' (' + revise*100/total + '%)' else if line.label = 'Recheck Content' then recheckContent + ' (' + recheckContent*100/total + '%)' else if line.label = 'Recheck State' then recheckState + ' (' + recheckState*100/total + '%)' else if line.label = 'Reuse' then reuse + ' (' + reuse*100/total + '%)' else if line.label = 'Blank' then undet + ' (' + undet*100/total + '%)' else if line.label = 'Total' then total else 'Error' endif endif endif endif endif endif"/>
      <ownedColumnMappings name="AsilColumn" headerLabelExpression="ASILs" featureName="goals" labelExpression="aql:let s = self.goals.asil in let total = s -> size(), revise = s -> select(x | x.status.type = gsn::ImpactType::Revise) -> size(), recheckContent = s -> select(x | x.status.type = gsn::ImpactType::RecheckContent) -> size(), recheckState = s -> select(x | x.status.type = gsn::ImpactType::RecheckState) -> size(), reuse = s -> select(x | x.status.type = gsn::ImpactType::Reuse) -> size() in let undet = total - revise - recheckContent - recheckState - reuse in if line.label = 'Revise' then revise + ' (' + revise*100/total + '%)' else if line.label = 'Recheck Content' then recheckContent + ' (' + recheckContent*100/total + '%)' else if line.label = 'Recheck State' then recheckState + ' (' + recheckState*100/total + '%)' else if line.label = 'Reuse' then reuse + ' (' + reuse*100/total + '%)' else if line.label = 'Blank' then undet + ' (' + undet*100/total + '%)' else if line.label = 'Total' then total else 'Error' endif endif endif endif endif endif"/>
    </ownedRepresentations>
    <ownedRepresentations xsi:type="description_2:EditionTableDescription" name="GSNImpactTrace" domainClass="gsn.SafetyCase">
      <metamodel href="../../edu.toronto.cs.se.modelepedia.gsn/model/gsn.ecore#/"/>
      <ownedLineMappings name="GoalLine" domainClass="gsn.Goal" semanticCandidatesExpression="feature:goals" headerLabelExpression="aql:'Goal ' + self.id"/>
      <ownedLineMappings name="StrategyLine" domainClass="gsn.Strategy" semanticCandidatesExpression="feature:strategies" headerLabelExpression="aql:'Strategy ' + self.id"/>
      <ownedLineMappings name="SolutionLine" domainClass="gsn.Solution" semanticCandidatesExpression="feature:solutions" headerLabelExpression="aql:'Solution ' + self.id"/>
      <ownedLineMappings name="ContextLine" domainClass="gsn.Context" semanticCandidatesExpression="feature:contexts" headerLabelExpression="aql:'Context ' + self.id"/>
      <ownedLineMappings name="JustificationLine" domainClass="gsn.Justification" semanticCandidatesExpression="feature:justifications" headerLabelExpression="aql:'Justification ' + self.id"/>
      <ownedLineMappings name="AssumptionLine" domainClass="gsn.Assumption" semanticCandidatesExpression="feature:assumptions" headerLabelExpression="aql:'Assumption ' + self.id"/>
      <ownedLineMappings name="ASILLine" domainClass="gsn.ASIL" semanticCandidatesExpression="aql:self.goals.asil" headerLabelExpression="aql:'ASIL for Goal ' + self.target.id"/>
      <ownedColumnMappings name="ImpactColumn" headerLabelExpression="Impact Type" featureName="status" labelExpression="aql:self.status.type"/>
      <ownedColumnMappings name="ImpactSourceColumn" headerLabelExpression="Impact Source" featureName="status" labelExpression="aql:self.status.source"/>
    </ownedRepresentations>
    <ownedRepresentations xsi:type="description_2:EditionTableDescription" name="GSNCount" domainClass="gsn.SafetyCase">
      <metamodel href="../../edu.toronto.cs.se.modelepedia.gsn/model/gsn.ecore#/"/>
      <ownedLineMappings name="CountLine" domainClass="gsn.SafetyCase" semanticCandidatesExpression="aql:root" headerLabelExpression="Count"/>
      <ownedColumnMappings name="GoalColumn" headerLabelExpression="Goal" featureName="goals" labelExpression="aql:self.goals -> size()"/>
      <ownedColumnMappings name="StrategyColumn" headerLabelExpression="Strategy" featureName="strategies" labelExpression="aql:self.strategies -> size()"/>
      <ownedColumnMappings name="SolutionColumn" headerLabelExpression="Solution" featureName="solutions" labelExpression="aql:self.solutions -> size()"/>
      <ownedColumnMappings name="ContextColumn" headerLabelExpression="Context" featureName="contexts" labelExpression="aql:self.contexts -> size()"/>
      <ownedColumnMappings name="AssumptionColumn" headerLabelExpression="Assumption" featureName="assumptions" labelExpression="aql:self.assumptions -> size()"/>
      <ownedColumnMappings name="JustificationColumn" headerLabelExpression="Justification" featureName="justifications" labelExpression="aql:self.justifications -> size()"/>
      <ownedColumnMappings name="ASILColumn" headerLabelExpression="ASIL" featureName="goals" labelExpression="aql:self.goals.asil -> size()"/>
      <ownedColumnMappings name="TotalColumn" headerLabelExpression="Total" featureName="goals" labelExpression="aql:let goalNum = self.goals -> size(), strategyNum = self.strategies -> size(), solutionNum = self.solutions -> size(), contextNum = self.contexts -> size(), assumptionNum = self.assumptions -> size(), justificationNum = self.justifications -> size(), asilNum = self.goals.asil -> size() in goalNum + strategyNum + solutionNum + contextNum + justificationNum + assumptionNum + asilNum"/>
    </ownedRepresentations>
    <ownedRepresentations xsi:type="description_2:EditionTableDescription" name="GSNCost" domainClass="gsn.SafetyCase">
      <metamodel href="../../edu.toronto.cs.se.modelepedia.gsn/model/gsn.ecore#/"/>
      <ownedLineMappings name="ValueLine" domainClass="gsn.SafetyCase" semanticCandidatesExpression="aql:root" headerLabelExpression="Value"/>
      <ownedColumnMappings name="ReviseColumn" headerLabelExpression="Revised No. (E_V)" featureName="goals" labelExpression="aql:self.eAllContents() -> filter(gsn::ImpactAnnotation) -> select(a | a.type = gsn::ImpactType::Revise) -> size()"/>
      <ownedColumnMappings name="RecheckColumn" headerLabelExpression="Recheck No. (E_R)" featureName="goals" labelExpression="aql:self.eAllContents() -> filter(gsn::ImpactAnnotation) -> select(a | a.type = gsn::ImpactType::RecheckContent or a.type = gsn::ImpactType::RecheckState) -> size()"/>
      <ownedColumnMappings name="KvColumn" headerLabelExpression="K_V" featureName="goals" labelExpression="2"/>
      <ownedColumnMappings name="KrColumn" headerLabelExpression="K_R" featureName="goals" labelExpression="1"/>
      <ownedColumnMappings name="CostColumn" headerLabelExpression="Cost_CIA" featureName="goals" labelExpression="aql:let anno = self.eAllContents() -> filter(gsn::ImpactAnnotation) in let revise = anno -> select(a | a.type = gsn::ImpactType::Revise) -> size(), recheck = anno -> select(a | a.type = gsn::ImpactType::RecheckContent or a.type = gsn::ImpactType::RecheckState) -> size() in 2 * revise + recheck"/>
      <ownedColumnMappings name="CountColumn" headerLabelExpression="Total No. (N)" featureName="goals" labelExpression="aql:let goalNum = self.goals -> size(), strategyNum = self.strategies -> size(), solutionNum = self.solutions -> size(), contextNum = self.contexts -> size(), assumptionNum = self.assumptions -> size(), justificationNum = self.justifications -> size(), asilNum = self.goals.asil -> size() in goalNum + strategyNum + solutionNum + contextNum + justificationNum + assumptionNum + asilNum"/>
      <ownedColumnMappings name="ManualColumn" headerLabelExpression="Cost_MIA" featureName="goals" labelExpression="aql:let goalNum = self.goals -> size(), strategyNum = self.strategies -> size(), solutionNum = self.solutions -> size(), contextNum = self.contexts -> size(), assumptionNum = self.assumptions -> size(), justificationNum = self.justifications -> size(), asilNum = self.goals.asil -> size() in goalNum + strategyNum + solutionNum + contextNum + justificationNum + assumptionNum + asilNum"/>
    </ownedRepresentations>
  </ownedViewpoints>
</description:Group>
