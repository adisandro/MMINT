# list of variables that drive the experiment setup, comma separated
# (e.g. an individual experiment is made up of 1 value for each of those variables)
variables=modelMultiplier,variablesMultiplier,idAttribute,constraint,variables,clausesToVariablesRatio,presenceConditionsToModelSizeRatio
# list of values that each variable can take, comma separated
modelMultiplier.values=1,2,3,4,5
variablesMultiplier.values=1,2,3,4,5
idAttribute.values=Name
constraint.values=(or _F4 _F6 _F7 (xor (xor _F2 _F3) _F8))
variables.values=[_F2,_F3,_F4,_F6,_F7,_F8]
clausesToVariablesRatio.values=0.0833
presenceConditionsToModelSizeRatio.values=0.125
# the X axis variable for gnuplot output

# list of operators to be run before randomness kicks in (no statistical significance), comma separated
#experimentOperators=
# list of operators to be run when randomness kicks in (statistical significance), comma separated
statisticsOperators=http://se.cs.toronto.edu/modelepedia/Operator_ICMT15
# list of operators that use each variable, comma separated
modelMultiplier.operator=http://se.cs.toronto.edu/modelepedia/Operator_ICMT15
variablesMultiplier.operator=http://se.cs.toronto.edu/modelepedia/Operator_ICMT15
idAttribute.operator=http://se.cs.toronto.edu/modelepedia/Operator_ICMT15
constraint.operator=http://se.cs.toronto.edu/modelepedia/Operator_ICMT15
variables.operator=http://se.cs.toronto.edu/modelepedia/Operator_ICMT15
clausesToVariablesRatio.operator=http://se.cs.toronto.edu/modelepedia/Operator_ICMT15
presenceConditionsToModelSizeRatio.operator=http://se.cs.toronto.edu/modelepedia/Operator_ICMT15

# seed to initialize the pseudorandom generator
seed=2
# number of samples to discard at the beginning of each experiment (warmup phase)
skipWarmupSamples=0
# min number of samples before the statistics module can stop
minSamples=1
# max number of samples after which the statistics module will stop anyway
maxSamples=1
# distribution type (T_STUDENT_95 or T_STUDENT_99)
distributionType=T_STUDENT_95
# the percentage of requested confidence, so that it stops when (resultUp-resultLow) <= (requestedConfidence*resultAvg)
requestedConfidence=0
# the number of threads to be used to run the experiment
numThreads=1

# list of output names, comma separated
# max processing time of the statistics operators before timeout, in seconds
maxProcessingTime=15
# the operators that generate the outputs
# default values for the outputs in case of timeout, -1 to just skip the timed out run
# min output values that have a meaning for a sample
# max output values that have a meaning for a sample, -1 if there is no limit
# compute confidence for the outputs
