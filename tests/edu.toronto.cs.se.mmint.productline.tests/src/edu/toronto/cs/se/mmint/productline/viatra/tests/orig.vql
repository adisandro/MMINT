/*******************************************************************************
 * Copyright (c) 2022, 2025 Alessio Di Sandro.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License 2.0 which is available at
 * https://www.eclipse.org/legal/epl-2.0/
 *
 * SPDX-License-Identifier: EPL-2.0
 *
 * Contributors:
 *     Alessio Di Sandro - Implementation
 *******************************************************************************/
package edu.toronto.cs.se.mmint.productline.viatra.tests

import "http://www.eclipse.org/emf/2002/Ecore"
import "http://se.cs.toronto.edu/modelepedia/ClassDiagram"
import "http://se.cs.toronto.edu/modelepedia/GSN"
import edu.toronto.cs.se.mmint.viatra.mid.connectedEMFObjects;

pattern multipleInheritanceCD(child: Class) {
  Class.superclass(child, parent1);
  Class.superclass(child, parent2);
  parent1 != parent2;
}

pattern testAttributeCD(clazz: Class) {
  Class.name(clazz, "parent2");
}

pattern testAttribute2CD(clazz: Class, name: EString) {
  Class.name(clazz, name);
}

pattern testMultipleEdgesCD(clazz: Class) {
  Class.superclass.name(clazz, "parent2");
}

pattern asilBConnectedClassesCD(goal: Goal, clazz: Class) {
  Goal.asil.value(goal, ASILLevel::B);
  find connectedEMFObjects(goal, clazz);
}

pattern highlyConnectedModelObjsCD(modelObj: EObject, connections: java Integer) {
  connections == count find connectedEMFObjects(modelObj, _);
//  check(connections > 0);
}

pattern testMinCD(minName: java String) {
  minName == min Class.name(_, #name);
}

pattern testMaxCD(maxName: java String) {
  maxName == max Class.name(_, #name);
}
